"
" 2014/02/19 created
" 2014/04/16 added keymaps for clipboard cut paste
" 2014/04/18 added makefile fix for tabs
" 2014/04/22 added macro and buffer shortcuts
" 2014/04/27 added bunch of items from Steve Losh blog
" 2014/11/29 added leader c to  insert c code comment and readded jj
" 2015/01/25 added column 81 highlight changed semicolon mapping
" 2015/03/31 added F4 to underline title with ='s
" 2015/04/17 moved F5 to F8, added F5 to underline title with -'s
" 2016/01/03 added F7 to preview markdown files in firefox
" 2016/01/25 added relativenumbers 
" 2016/02/03 added new relativenumber script (25 years tomorrow!!)
" 2017/01/04 embedded the toggle number script and added nobackup setting
" 2017/01/22 added no modline based on Slackware adventures
" 2017/11/16 misc cleanup
" 2017/12/13 added cheatsheet shortcuts
" 2018/12/15 mapped plus (+) to insert one space
" 2019/02/13 autocmd for leader c comments in C files
" 2019/03/18 added /p and /y for system clipboard put & yank
" 2019/03/20 default list & number on, working with lot of makefile and markdown 
" 2022/01/28 changed K mapping to noremap only so it works in visual mode
"
"
" ------------------------------------------------------------
" SECTION ONE -- Options
" ------------------------------------------------------------

" vim not vi
set nocompatible
set mouse=a
set nobackup
" set nowrap
set nomodeline
set textwidth=0

" search case 
" all-lowercase string your search will be case-insensitive
" any characters in uppercase the search will be case-sensitive 
set ignorecase
set smartcase

" highlight search results (as you type) 
" <leader>\ mapping makes it easy to hide search results
" This gets rid of the distracting highlighting once you done with it
" I seem to use this a lot so changed it to \\ for quick double tap
set incsearch
set showmatch
set hlsearch
"set nohlsearch
nnoremap <leader>\ :let @/=""<cr>

" highlight column 80 of wide lines
set colorcolumn=81
highlight ColorColumn ctermbg=239
" call matchadd('ColorColumn', '\%81v', 100)

" expand tab to 4 spaces 
"   .....use :retab to fix up old files
" use tabs in makefiles, no expandtab 
set tabstop=4
set shiftwidth=4
set expandtab

" for some reason Debian has these off
syntax on
filetype on
" to get the imgls file plugin to load
filetype plugin on

augroup vimrc_auto 
if !exists("vimrc_auto_loaded")
  let vimrc_auto_loaded = 1
  autocmd vimrc_auto FileType make set noexpandtab shiftwidth=8 softtabstop=0
  autocmd vimrc_auto FileType c :source $HOME/.vim/snip.vim
  autocmd vimrc_auto FileType c nnoremap <leader>c <ESC>0i// <ESC><CR>
  autocmd vimrc_auto FileType h nnoremap <leader>c <ESC>0i// <ESC><CR>
  autocmd vimrc_auto FileType cpp nnoremap <leader>c <ESC>0i// <ESC><CR>
endif

" always have an extra line on bottom and top
set scrolloff=1

" allow dirty buffers to be hidden
set hidden

" hidden characters tabs, spaces, eol, and turn them on
exec "set listchars=tab:\ubb\ubb,eol:\ub6,trail:\ub7"
set list
" set nonumber
set number
set norelativenumber

" try this out
set scrolloff=2

" statusline
set laststatus=2
set statusline=%f%m%=%l:%-9c\ Lines:%-9L%5p%%
highlight statusLine cterm=NONE ctermfg=7 ctermbg=4

" File Explore settings, moved to toggle netrw script
let g:netrw_browse_split = 0
let g:netrw_winsize = 25

" ------------------------------------------------------------
" SECTION TWO -- Functions
" ------------------------------------------------------------
" <leader>n for numbers toggle, and <leader>m for mouse toggle
source $HOME/.vim/toggle.vim
" <leader> q for quoting a visual selection
source $HOME/.vim/quotes.vim
" file explorer toggle
source $HOME/.vim/toggle_netrw.vim
" clipboard functions
source $HOME/.vim/clip.vim

" ------------------------------------------------------------
" SECTION THREE -- Key Mappings
" ------------------------------------------------------------
" FEW KEY ADJUSTMENTS
"
" extra escape key
inoremap jj <ESC>
"
" extra eol
"    2019/01/12 changed from L to K as I wanted L back
"    normally K finds the man page for word under the cursor
noremap K $
"
" quick quit w/o write, I never ever used this (2021/02/17)
" nnoremap QQ :q!<cr>
"
" insert one space, love this one
nnoremap + i <ESC>

" C function jumps, with adjustments
nnoremap [[ [[z<cr>kj
nnoremap ]] ]]z<cr>kj

" make colon commands easier 2017/11/18 REMOVED
" I never use this, too use to semi-colon
" nnoremap ; :
" vnoremap ; :

" MISC SHORTCUTS
"  n=numbers and show hidden chars
"  s=spell
"  c=C comment 
"  C=shell comment 
"  q=quote visual selection
"
nnoremap <leader>m :call Togmouse()<CR>
nnoremap <leader>n :call Tognums()<CR>
nnoremap <leader>s :set spell!<CR>
nnoremap <leader>c <ESC>0i# <ESC><CR>
vnoremap <buffer> <leader>q :<c-u>call QuoteIt()<cr><esc>
nnoremap <leader>" dt"
"
" nnoremap <leader>t /<\*\*><cr>:nolsearch<cr>cf>
" nnoremap ,t {jV}k:! tidy_table<cr>
"
" lets keep hidden netrw directories to a minimum with slow browsing
let g:netrw_fastbrowse=0
nnoremap <leader>e :let g:netrw_browse_split=0<cr>:Explore<cr>
nnoremap <leader>v :let g:netrw_browse_split=4<cr>:call ToggleVertExplorer()<cr>

" using register f for quick macros and shortcuts \f 
nnoremap <leader>f @f

" buffer shortcuts 
nnoremap <leader>b :bn<cr>
nnoremap <leader><space> :bn<cr>
nnoremap <leader>w <c-w><c-w>

" you should use gt, gT
" nnoremap <leader>t :tabn<cr>

" system clipboard yank/paste
" nnoremap <leader>p "+gP
" nnoremap <leader>P "+P
" imap <leader>p <ESC>"+gP
" imap <leader>P <ESC>"+P
" vmap <leader>y "+y
"
" OLD Method, only yanks full lines
"vmap <leader>y :w !xsel -i -b<cr> 
" OLD NEW fancy copy-to-clipboard 2021/12/10
" yank visual selection to register 0, echo register to xsel, redraw screen
" vmap <leader>y y:silent !echo '<c-r>0' <bar> xsel -i -b<cr><c-l>
" NEW copy-to-clipboard 2021/12/11
vmap <leader>y y:silent call ClipIt()<cr>

nnoremap <leader>p :r !xsel -o -b<cr> 
nnoremap <leader>P k:r !xsel -o -b<cr> 

" cheatsheet shortcuts
" when cheatsheet loaded: remap ,c to exit, map ,, to jump sections
autocmd BufReadPre $HOME/.vim/vim_sheet.md :syntax off | :nnoremap <buffer> ,, /^----<cr>:nohl<cr>zt |  nnoremap <buffer> ,c :syntax on<cr>:bd!<cr>
nnoremap ,c :view $HOME/.vim/vim_sheet.md<cr>

" image list (imgls) file type
autocmd BufRead,BufNewFile  *.imgls set filetype=imgls

" ------------------------------------------------------------
" SECTION FOUR -- Function Key Mappings
" ------------------------------------------------------------
"   F2 - paste text from clipboard
"   F3 - insert date
"   F4 - underline title with =
"   F5 - underline title with - 
"   F6 - preview markdown as pdf

" nmap <c-v> "+gP, bad idea as <ctrl-v> is used for block mode visual
nmap <F2> "+gP
imap <F2> <ESC>"+gP
"
" f3 insert todays date
nnoremap <F3> "=strftime("%Y/%m/%d")<CR>P
inoremap <F3> <C-R>=strftime("%Y/%m/%d")<CR>
"
" f4 & f5 MARKDOWN underlines
nmap <F4> 0yypv$r=
nmap <F5> 0yypv$r-
"
" preview docmentation shortcuts
nnoremap <F6> :w<cr>:!make pdf<cr><cr> 
nnoremap <F7> :w<cr>:!make pdf<cr>:!make viewpdf<cr><cr> 



" ------------------------------------------------------------
" STRANGE STUFF
" ------------------------------------------------------------
" preview markdown
" you need a makefile in the directory to convert md to html 
" nmap <F7> :w<CR>:!make preview PREVIEW=% &<CR><CR>:sleep 500m<CR><C-l>
"
" f8 start browser with the URL under the cursor
" used in the reading list file to start browser
" nmap <F8> :.,.w !xargs -I {} firefox {} & <cr><cr>



